# Generated by Django 3.2 on 2021-07-02 03:36

import accounts.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('country_code', models.CharField(default='+91', max_length=4)),
                ('phone', models.CharField(blank=True, max_length=12)),
                ('user_type', models.CharField(choices=[('D', 'Doctor'), ('P', 'Patient'), ('S', 'Superuser')], max_length=1)),
                ('is_email_varified', models.BooleanField(default=False)),
                ('is_phone_varified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('min_setup_complete', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=datetime.datetime.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('dob', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'LGBT'), ('N', 'Dont want to reveal')], max_length=2, null=True)),
                ('media', models.CharField(max_length=150, null=True)),
                ('profile', models.ImageField(default='profile/default_profile.jpg', upload_to=accounts.models.upload_path)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='person', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.person')),
                ('speciality', models.CharField(max_length=120)),
                ('degree', models.CharField(max_length=50, verbose_name='Degree')),
                ('description', models.CharField(default='', max_length=50, verbose_name='Degree')),
                ('appoinment_duration', models.DurationField(verbose_name='appointment duration')),
                ('practice_started', models.DateField(verbose_name='Practice started Date')),
                ('start_time', models.TimeField(verbose_name='clinic open time')),
                ('end_time', models.TimeField(verbose_name='clinic close time')),
                ('is_vc_available', models.BooleanField(default=False, verbose_name='Available for Video Calling')),
                ('call_active', models.BooleanField(default=False, verbose_name='Video call is going on')),
                ('charge_per_app', models.DecimalField(decimal_places=2, default=300, max_digits=6, verbose_name='Charge per appointment')),
                ('charge_per_vc', models.DecimalField(decimal_places=2, default=200, max_digits=6, verbose_name='Charge per video calling')),
                ('fcm_token', models.CharField(max_length=700)),
            ],
            bases=('accounts.person',),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.person')),
                ('married', models.CharField(choices=[('M', 'Married'), ('U', 'Unmarried'), ('N', 'Dont want to revel')], default='N', max_length=1)),
                ('occupation', models.CharField(max_length=50, null=True)),
                ('blood_group', models.CharField(choices=[('A+', 'A Positive'), ('A-', 'A Negative'), ('B+', 'B Positive'), ('B-', 'B Negative'), ('AB+', 'AB Positive'), ('AB-', 'AB Negative'), ('O+', 'O Positive'), ('O-', 'O Negative')], max_length=3, null=True)),
                ('education', models.CharField(choices=[('7th', '7th'), ('SSC', '10th'), ('HSC', '12th'), ('GRD', 'Graduate'), ('PG', 'Post Graduate more'), ('N', 'Dont want to reveal')], max_length=3)),
            ],
            bases=('accounts.person',),
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('country_code', models.CharField(default='+91', max_length=3)),
                ('phone', models.CharField(max_length=120, null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone', to='accounts.person')),
            ],
        ),
        migrations.CreateModel(
            name='Other',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=120, null=True)),
                ('value', models.CharField(max_length=120, null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other', to='accounts.person')),
            ],
        ),
        migrations.CreateModel(
            name='Granted',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=3600))),
                ('asking_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_asking', to=settings.AUTH_USER_MODEL)),
                ('granting_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_granting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=120)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email', to='accounts.person')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('house_no', models.CharField(default=None, max_length=100, null=True, verbose_name='House Number/ Flat Number')),
                ('locality', models.CharField(default=None, max_length=100, null=True, verbose_name='locality')),
                ('district', models.CharField(default=None, max_length=50, null=True)),
                ('state', models.CharField(default=None, max_length=50, null=True)),
                ('country', models.CharField(default=None, max_length=50, null=True)),
                ('pincode', models.CharField(default=None, max_length=50, null=True)),
                ('latitude', models.DecimalField(decimal_places=7, default=None, max_digits=10, null=True)),
                ('longitude', models.DecimalField(decimal_places=7, default=None, max_digits=10, null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='accounts.person')),
            ],
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date', models.DateField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weight', to='accounts.patient')),
            ],
        ),
        migrations.CreateModel(
            name='PastDiseases',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('past_diseases', models.CharField(max_length=120)),
                ('discription', models.CharField(max_length=1000, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='past_diseases', to='accounts.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Height',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('height', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date', models.DateField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='height', to='accounts.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Glocose',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pre_meal', models.DecimalField(decimal_places=2, max_digits=4)),
                ('post_meal', models.DecimalField(decimal_places=2, max_digits=4)),
                ('date', models.DateField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glocose', to='accounts.patient')),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('country_code', models.CharField(default='+91', max_length=3)),
                ('phone_no', models.CharField(max_length=120)),
                ('relation', models.CharField(max_length=120, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contact', to='accounts.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Cholesterol',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('HDL', models.DecimalField(decimal_places=2, max_digits=5)),
                ('LDL', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date', models.DateField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cholesterol', to='accounts.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Break',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='General Break', max_length=1000, null=True)),
                ('time_start', models.DateTimeField()),
                ('time_end', models.DateTimeField()),
                ('reason', models.CharField(max_length=1000, null=True)),
                ('repeat', models.CharField(choices=[('D', 'Daily'), ('W', 'Weakly'), ('M', 'Monthly'), ('N', 'None')], max_length=1)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_off', to='accounts.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='BloodPressure',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('systolic', models.DecimalField(decimal_places=2, max_digits=5)),
                ('diastolic', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date', models.DateField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_pressure', to='accounts.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Allergies',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('allergies', models.CharField(max_length=120)),
                ('description', models.CharField(max_length=1000, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allergies', to='accounts.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Addictions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('addiction', models.CharField(max_length=120, null=True)),
                ('current', models.BooleanField(default=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addictions', to='accounts.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField(null=True)),
                ('review', models.CharField(max_length=1000, null=True)),
                ('date', models.DateField()),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='accounts.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='accounts.patient')),
            ],
            options={
                'unique_together': {('doctor', 'patient')},
            },
        ),
    ]
